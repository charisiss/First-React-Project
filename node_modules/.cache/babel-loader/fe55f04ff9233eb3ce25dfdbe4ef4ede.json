{"ast":null,"code":"'use strict';\n\nconst BaseGuild = require('./BaseGuild');\n\nconst {\n  VerificationLevels,\n  NSFWLevels\n} = require('../util/Constants');\n/**\n * Bundles common attributes and methods between {@link Guild} and {@link InviteGuild}\n * @extends {BaseGuild}\n * @abstract\n */\n\n\nclass AnonymousGuild extends BaseGuild {\n  constructor(client, data) {\n    let immediatePatch = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    super(client, data);\n    if (immediatePatch) this._patch(data);\n  }\n\n  _patch(data) {\n    if ('features' in data) this.features = data.features;\n\n    if ('splash' in data) {\n      /**\n       * The hash of the guild invite splash image\n       * @type {?string}\n       */\n      this.splash = data.splash;\n    }\n\n    if ('banner' in data) {\n      /**\n       * The hash of the guild banner\n       * @type {?string}\n       */\n      this.banner = data.banner;\n    }\n\n    if ('description' in data) {\n      /**\n       * The description of the guild, if any\n       * @type {?string}\n       */\n      this.description = data.description;\n    }\n\n    if ('verification_level' in data) {\n      /**\n       * The verification level of the guild\n       * @type {VerificationLevel}\n       */\n      this.verificationLevel = VerificationLevels[data.verification_level];\n    }\n\n    if ('vanity_url_code' in data) {\n      /**\n       * The vanity invite code of the guild, if any\n       * @type {?string}\n       */\n      this.vanityURLCode = data.vanity_url_code;\n    }\n\n    if ('nsfw_level' in data) {\n      /**\n       * The NSFW level of this guild\n       * @type {NSFWLevel}\n       */\n      this.nsfwLevel = NSFWLevels[data.nsfw_level];\n    }\n  }\n  /**\n   * The URL to this guild's banner.\n   * @param {StaticImageURLOptions} [options={}] Options for the Image URL\n   * @returns {?string}\n   */\n\n\n  bannerURL() {\n    let {\n      format,\n      size\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return this.banner && this.client.rest.cdn.Banner(this.id, this.banner, format, size);\n  }\n  /**\n   * The URL to this guild's invite splash image.\n   * @param {StaticImageURLOptions} [options={}] Options for the Image URL\n   * @returns {?string}\n   */\n\n\n  splashURL() {\n    let {\n      format,\n      size\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return this.splash && this.client.rest.cdn.Splash(this.id, this.splash, format, size);\n  }\n\n}\n\nmodule.exports = AnonymousGuild;","map":{"version":3,"names":["BaseGuild","require","VerificationLevels","NSFWLevels","AnonymousGuild","constructor","client","data","immediatePatch","_patch","features","splash","banner","description","verificationLevel","verification_level","vanityURLCode","vanity_url_code","nsfwLevel","nsfw_level","bannerURL","format","size","rest","cdn","Banner","id","splashURL","Splash","module","exports"],"sources":["C:/Users/xsxsam/node_modules/discord.js/src/structures/AnonymousGuild.js"],"sourcesContent":["'use strict';\n\nconst BaseGuild = require('./BaseGuild');\nconst { VerificationLevels, NSFWLevels } = require('../util/Constants');\n\n/**\n * Bundles common attributes and methods between {@link Guild} and {@link InviteGuild}\n * @extends {BaseGuild}\n * @abstract\n */\nclass AnonymousGuild extends BaseGuild {\n  constructor(client, data, immediatePatch = true) {\n    super(client, data);\n    if (immediatePatch) this._patch(data);\n  }\n\n  _patch(data) {\n    if ('features' in data) this.features = data.features;\n\n    if ('splash' in data) {\n      /**\n       * The hash of the guild invite splash image\n       * @type {?string}\n       */\n      this.splash = data.splash;\n    }\n\n    if ('banner' in data) {\n      /**\n       * The hash of the guild banner\n       * @type {?string}\n       */\n      this.banner = data.banner;\n    }\n\n    if ('description' in data) {\n      /**\n       * The description of the guild, if any\n       * @type {?string}\n       */\n      this.description = data.description;\n    }\n\n    if ('verification_level' in data) {\n      /**\n       * The verification level of the guild\n       * @type {VerificationLevel}\n       */\n      this.verificationLevel = VerificationLevels[data.verification_level];\n    }\n\n    if ('vanity_url_code' in data) {\n      /**\n       * The vanity invite code of the guild, if any\n       * @type {?string}\n       */\n      this.vanityURLCode = data.vanity_url_code;\n    }\n\n    if ('nsfw_level' in data) {\n      /**\n       * The NSFW level of this guild\n       * @type {NSFWLevel}\n       */\n      this.nsfwLevel = NSFWLevels[data.nsfw_level];\n    }\n  }\n\n  /**\n   * The URL to this guild's banner.\n   * @param {StaticImageURLOptions} [options={}] Options for the Image URL\n   * @returns {?string}\n   */\n  bannerURL({ format, size } = {}) {\n    return this.banner && this.client.rest.cdn.Banner(this.id, this.banner, format, size);\n  }\n\n  /**\n   * The URL to this guild's invite splash image.\n   * @param {StaticImageURLOptions} [options={}] Options for the Image URL\n   * @returns {?string}\n   */\n  splashURL({ format, size } = {}) {\n    return this.splash && this.client.rest.cdn.Splash(this.id, this.splash, format, size);\n  }\n}\n\nmodule.exports = AnonymousGuild;\n"],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,aAAD,CAAzB;;AACA,MAAM;EAAEC,kBAAF;EAAsBC;AAAtB,IAAqCF,OAAO,CAAC,mBAAD,CAAlD;AAEA;AACA;AACA;AACA;AACA;;;AACA,MAAMG,cAAN,SAA6BJ,SAA7B,CAAuC;EACrCK,WAAW,CAACC,MAAD,EAASC,IAAT,EAAsC;IAAA,IAAvBC,cAAuB,uEAAN,IAAM;IAC/C,MAAMF,MAAN,EAAcC,IAAd;IACA,IAAIC,cAAJ,EAAoB,KAAKC,MAAL,CAAYF,IAAZ;EACrB;;EAEDE,MAAM,CAACF,IAAD,EAAO;IACX,IAAI,cAAcA,IAAlB,EAAwB,KAAKG,QAAL,GAAgBH,IAAI,CAACG,QAArB;;IAExB,IAAI,YAAYH,IAAhB,EAAsB;MACpB;AACN;AACA;AACA;MACM,KAAKI,MAAL,GAAcJ,IAAI,CAACI,MAAnB;IACD;;IAED,IAAI,YAAYJ,IAAhB,EAAsB;MACpB;AACN;AACA;AACA;MACM,KAAKK,MAAL,GAAcL,IAAI,CAACK,MAAnB;IACD;;IAED,IAAI,iBAAiBL,IAArB,EAA2B;MACzB;AACN;AACA;AACA;MACM,KAAKM,WAAL,GAAmBN,IAAI,CAACM,WAAxB;IACD;;IAED,IAAI,wBAAwBN,IAA5B,EAAkC;MAChC;AACN;AACA;AACA;MACM,KAAKO,iBAAL,GAAyBZ,kBAAkB,CAACK,IAAI,CAACQ,kBAAN,CAA3C;IACD;;IAED,IAAI,qBAAqBR,IAAzB,EAA+B;MAC7B;AACN;AACA;AACA;MACM,KAAKS,aAAL,GAAqBT,IAAI,CAACU,eAA1B;IACD;;IAED,IAAI,gBAAgBV,IAApB,EAA0B;MACxB;AACN;AACA;AACA;MACM,KAAKW,SAAL,GAAiBf,UAAU,CAACI,IAAI,CAACY,UAAN,CAA3B;IACD;EACF;EAED;AACF;AACA;AACA;AACA;;;EACEC,SAAS,GAAwB;IAAA,IAAvB;MAAEC,MAAF;MAAUC;IAAV,CAAuB,uEAAJ,EAAI;IAC/B,OAAO,KAAKV,MAAL,IAAe,KAAKN,MAAL,CAAYiB,IAAZ,CAAiBC,GAAjB,CAAqBC,MAArB,CAA4B,KAAKC,EAAjC,EAAqC,KAAKd,MAA1C,EAAkDS,MAAlD,EAA0DC,IAA1D,CAAtB;EACD;EAED;AACF;AACA;AACA;AACA;;;EACEK,SAAS,GAAwB;IAAA,IAAvB;MAAEN,MAAF;MAAUC;IAAV,CAAuB,uEAAJ,EAAI;IAC/B,OAAO,KAAKX,MAAL,IAAe,KAAKL,MAAL,CAAYiB,IAAZ,CAAiBC,GAAjB,CAAqBI,MAArB,CAA4B,KAAKF,EAAjC,EAAqC,KAAKf,MAA1C,EAAkDU,MAAlD,EAA0DC,IAA1D,CAAtB;EACD;;AA1EoC;;AA6EvCO,MAAM,CAACC,OAAP,GAAiB1B,cAAjB"},"metadata":{},"sourceType":"script"}