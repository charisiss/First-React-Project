{"ast":null,"code":"'use strict';\n\nconst BitField = require('./BitField');\n/**\n * Data structure that makes it easy to interact with a {@link ClientApplication#flags} bitfield.\n * @extends {BitField}\n */\n\n\nclass ApplicationFlags extends BitField {}\n/**\n * @name ApplicationFlags\n * @kind constructor\n * @memberof ApplicationFlags\n * @param {BitFieldResolvable} [bits=0] Bit(s) to read from\n */\n\n/**\n * Bitfield of the packed bits\n * @type {number}\n * @name ApplicationFlags#bitfield\n */\n\n/**\n * Numeric application flags. All available properties:\n * * `GATEWAY_PRESENCE`\n * * `GATEWAY_PRESENCE_LIMITED`\n * * `GATEWAY_GUILD_MEMBERS`\n * * `GATEWAY_GUILD_MEMBERS_LIMITED`\n * * `VERIFICATION_PENDING_GUILD_LIMIT`\n * * `EMBEDDED`\n * * `GATEWAY_MESSAGE_CONTENT`\n * * `GATEWAY_MESSAGE_CONTENT_LIMITED`\n * @type {Object}\n * @see {@link https://discord.com/developers/docs/resources/application#application-object-application-flags}\n */\n\n\nApplicationFlags.FLAGS = {\n  GATEWAY_PRESENCE: 1 << 12,\n  GATEWAY_PRESENCE_LIMITED: 1 << 13,\n  GATEWAY_GUILD_MEMBERS: 1 << 14,\n  GATEWAY_GUILD_MEMBERS_LIMITED: 1 << 15,\n  VERIFICATION_PENDING_GUILD_LIMIT: 1 << 16,\n  EMBEDDED: 1 << 17,\n  GATEWAY_MESSAGE_CONTENT: 1 << 18,\n  GATEWAY_MESSAGE_CONTENT_LIMITED: 1 << 19\n};\nmodule.exports = ApplicationFlags;","map":{"version":3,"names":["BitField","require","ApplicationFlags","FLAGS","GATEWAY_PRESENCE","GATEWAY_PRESENCE_LIMITED","GATEWAY_GUILD_MEMBERS","GATEWAY_GUILD_MEMBERS_LIMITED","VERIFICATION_PENDING_GUILD_LIMIT","EMBEDDED","GATEWAY_MESSAGE_CONTENT","GATEWAY_MESSAGE_CONTENT_LIMITED","module","exports"],"sources":["C:/Users/xsxsam/node_modules/discord.js/src/util/ApplicationFlags.js"],"sourcesContent":["'use strict';\n\nconst BitField = require('./BitField');\n\n/**\n * Data structure that makes it easy to interact with a {@link ClientApplication#flags} bitfield.\n * @extends {BitField}\n */\nclass ApplicationFlags extends BitField {}\n\n/**\n * @name ApplicationFlags\n * @kind constructor\n * @memberof ApplicationFlags\n * @param {BitFieldResolvable} [bits=0] Bit(s) to read from\n */\n\n/**\n * Bitfield of the packed bits\n * @type {number}\n * @name ApplicationFlags#bitfield\n */\n\n/**\n * Numeric application flags. All available properties:\n * * `GATEWAY_PRESENCE`\n * * `GATEWAY_PRESENCE_LIMITED`\n * * `GATEWAY_GUILD_MEMBERS`\n * * `GATEWAY_GUILD_MEMBERS_LIMITED`\n * * `VERIFICATION_PENDING_GUILD_LIMIT`\n * * `EMBEDDED`\n * * `GATEWAY_MESSAGE_CONTENT`\n * * `GATEWAY_MESSAGE_CONTENT_LIMITED`\n * @type {Object}\n * @see {@link https://discord.com/developers/docs/resources/application#application-object-application-flags}\n */\nApplicationFlags.FLAGS = {\n  GATEWAY_PRESENCE: 1 << 12,\n  GATEWAY_PRESENCE_LIMITED: 1 << 13,\n  GATEWAY_GUILD_MEMBERS: 1 << 14,\n  GATEWAY_GUILD_MEMBERS_LIMITED: 1 << 15,\n  VERIFICATION_PENDING_GUILD_LIMIT: 1 << 16,\n  EMBEDDED: 1 << 17,\n  GATEWAY_MESSAGE_CONTENT: 1 << 18,\n  GATEWAY_MESSAGE_CONTENT_LIMITED: 1 << 19,\n};\n\nmodule.exports = ApplicationFlags;\n"],"mappings":"AAAA;;AAEA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,YAAD,CAAxB;AAEA;AACA;AACA;AACA;;;AACA,MAAMC,gBAAN,SAA+BF,QAA/B,CAAwC;AAExC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAE,gBAAgB,CAACC,KAAjB,GAAyB;EACvBC,gBAAgB,EAAE,KAAK,EADA;EAEvBC,wBAAwB,EAAE,KAAK,EAFR;EAGvBC,qBAAqB,EAAE,KAAK,EAHL;EAIvBC,6BAA6B,EAAE,KAAK,EAJb;EAKvBC,gCAAgC,EAAE,KAAK,EALhB;EAMvBC,QAAQ,EAAE,KAAK,EANQ;EAOvBC,uBAAuB,EAAE,KAAK,EAPP;EAQvBC,+BAA+B,EAAE,KAAK;AARf,CAAzB;AAWAC,MAAM,CAACC,OAAP,GAAiBX,gBAAjB"},"metadata":{},"sourceType":"script"}